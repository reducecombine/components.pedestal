version: 2.1

orbs:
  shellcheck: circleci/shellcheck@2.2.3

commands:
  setup-env:
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: lein with-profile -dev,+test,+ci deps
      - run: cd .circleci/nvd; lein deps
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
  nvd:
    parameters:
      today:
        description: "Today's date. This results in a cache that will last 1 day (only on success)."
        type: string
    steps:
      - setup-env
      - shellcheck/install
      - run: "shellcheck $NVD_SCRIPT"
      - restore_cache:
          keys:
            - v1-nvd-{{ checksum "project.clj" }}-${ date +'%m/%d/%Y' }
      - run: "$NVD_SCRIPT"
      - save_cache:
          paths:
            - ~/.m2/repository/org/owasp/dependency-check-utils/6.2.2/data
          key: v1-nvd-{{ checksum "project.clj" }}-${ date +'%m/%d/%Y' }
   

executors:
  lein-executor:
    docker:
      - image: circleci/clojure:openjdk-8-lein-2.9.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      JVM_OPTS: -Xmx3200m
      NVD_SCRIPT: ".circleci/nvd/run.sh"

jobs:
  build:
    executor: lein-executor
    steps:
      - setup-env
      - run:
          name: 'Run JVM tests, reporting coverage'
          command: lein with-profile -dev,+test trampoline cloverage --lcov --junit -o coverage/
      - run:
          name: 'Ensure artifact isolation, inform of boxed math'
          command: lein with-profile -dev,+check check
      - store_test_results:
          path: ~/repo/coverage
      - store_artifacts:
          path: ~/repo/coverage
  nvd:
    executor: lein-executor
    steps:
      - nvd:
          today: "${date +'%m/%d/%Y'}"
  deploy:
    executor: lein-executor
    steps:
      - setup-env
      - run:
          name: import GPG key
          command: echo -e "$GPG_KEY_V2" | gpg --import
      - run:
          name: Perform pre-release sanity check
          command: lein with-profile -dev,+ci run -m nedap.ci.release-workflow.api sanity-check
      - run:
          name: release to JFrog
          command: lein deploy
      - run:
          name: release to Clojars
          command: lein deploy clojars          

workflows:
  version: 2
  CircleCI:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/
      - nvd:
          filters:
            branches:
              only: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/
      - deploy:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+(-alpha\d+)?$/
